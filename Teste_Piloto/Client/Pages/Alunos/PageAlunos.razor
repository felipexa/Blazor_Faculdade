@inject HttpClient http
<br>
<EditForm Model="@Aluno" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator/>
    <div class="row">
        <div class="form-group col-md-12">
            <label>Nome</label>
            <InputText @bind-Value="@Aluno.Nome" class="form-control"></InputText>
            <ValidationMessage For="@(() =>Aluno.Nome)"></ValidationMessage>
        </div>
        <div class="form-group col-md-6 roboto">
            <label>RG</label>
            <InputText @bind-Value="@Aluno.Rg" class="form-control"></InputText>
            <ValidationMessage For="@(() =>Aluno.Rg)"></ValidationMessage>
        </div>
        <div class="form-group col-md-6 roboto">
            <label>CPF</label>
            <InputText @bind-Value="@Aluno.Cpf" class="form-control"></InputText>
            <ValidationMessage For="@(() =>Aluno.Cpf)"></ValidationMessage>
        </div>
        <div class="form-group col-md-6 roboto">
            <label>Data Nascimento</label>
            <InputDate @bind-Value="@Aluno.Datanascimento" class="form-control"></InputDate>
        </div>
        <div class="form-group col-md-6 roboto">
            <label>Gênero</label>
            <InputText @bind-Value="@Aluno.Genero" class="form-control"></InputText>
            <ValidationMessage For="@(() =>Aluno.Genero)"></ValidationMessage>
        </div>
        <div class="form-group col-md-6 roboto">
            <label>Data Inicio Curso</label>
            <InputDate @bind-Value="@Aluno.DataInicioCurso" class="form-control"></InputDate>
        </div>
        <div class="form-group col-md-6 roboto">
            <label>Data Termino Curso</label>
            <InputDate @bind-Value="@Aluno.DataTerminoCurso" class="form-control"></InputDate>
        </div>

        <div class="form-group col-md-6 roboto">
            <label>Email</label>
            <InputText @bind-Value="@Aluno.Email" class="form-control"></InputText>
            <ValidationMessage For="@(() =>Aluno.Email)"></ValidationMessage>
        </div>
        <div class="form-group col-md-6 roboto">
            <label>Telefone</label>
            <InputText @bind-Value="@Aluno.Telefone" class="form-control"></InputText>
            <ValidationMessage For="@(() =>Aluno.Telefone)"></ValidationMessage>
        </div>
        @*<div class="form-group">
            <label>Curso</label>
            <InputNumber @bind-Value="@Aluno.CursosId"></InputNumber>
        </div>*@
        <div class="form-group col-md-6 roboto">
            <label>Curso</label>
            @*<CustomInputSelect @bind-Value="@Aluno.AlunoId" class="form-control">
                @if (cursos != null)
                {
                    <option>SELECT...</option>
                    @foreach (var curso in cursos)
                    {
                        <option value="@curso.Id_Curso">@curso.NomeCurso</option>
                    }
                }
            </CustomInputSelect>*@
            <InputSelect @bind-Value="@Aluno.NomeCurso" class="form-control">
                @if (cursos != null)
                {
                    <option value="">Selecione um curso</option>
                    @foreach (var curso in cursos)
                    {
                        <option value="@curso.NomeCurso">@curso.NomeCurso</option>
                    }
                }
            </InputSelect>
        </div>
        <div class="col-md-12 text-center">
            <button type="submit" class="btn-add w-50 rounded-pill" >@ButtonText</button>
        </div>
      

    </div>
</EditForm>


@code
{
    public List<Curso> cursos { get; set; }
    [Parameter] public Aluno Aluno { get; set; }
    [Parameter] public string ButtonText { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await LoadCursos();
    }
    async Task LoadCursos()
    {
        cursos = await http.GetFromJsonAsync<List<Curso>>("api/cursos");
    }
}
